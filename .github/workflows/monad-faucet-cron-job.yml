name: Extract Monad Testnet Tokens

on:
    # schedule:
    #     - cron: "0 * * * *"
    workflow_dispatch:

jobs:
    extract-monad-token:
        runs-on: ubuntu-latest
        environment:
            name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get last run time
              id: last-run
              run: |
                  # Check if timestamp file exists
                  if [ -f ".github/last_run.txt" ]; then
                    LAST_RUN=$(cat .github/last_run.txt)
                    CURRENT_TIME=$(date +%s)
                    HOURS_SINCE_LAST_RUN=$(( (CURRENT_TIME - LAST_RUN) / 3600 ))
                    
                    echo "Last run was $HOURS_SINCE_LAST_RUN hours ago"
                    
                    # Set output variable - true if 25+ hours have passed
                    if [ $HOURS_SINCE_LAST_RUN -ge 25 ]; then
                      echo "should_run=true" >> $GITHUB_OUTPUT
                    else
                      echo "should_run=false" >> $GITHUB_OUTPUT
                    fi
                  else
                    # First run - should execute
                    echo "No previous run detected"
                    echo "should_run=true" >> $GITHUB_OUTPUT
                  fi

            - name: Set up Python
              if: steps.last-run.outputs.should_run == 'true'
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"

            - name: Install dependencies
              if: steps.last-run.outputs.should_run == 'true'
              run: |
                  python -m pip install --upgrade pip
                  pip install .

            - name: Run Python script
              if: steps.last-run.outputs.should_run == 'true'
              env:
                  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
                  ERC20_ADDRESSES: ${{ secrets.ERC20_ADDRESSES }}
                  MONAD_FAUCET_URL: ${{ secrets.MONAD_FAUCET_URL }}
              run: |
                  python -m src.faucet_extractor_poc.extract --faucet MON

            - name: Upload logs as artifact
              if: steps.last-run.outputs.should_run == 'true'
              uses: actions/upload-artifact@v4
              with:
                  name: monad-logs
                  path: logs/

            - name: Update last run time
              if: steps.last-run.outputs.should_run == 'true'
              run: |
                  # Update last run time
                  date +%s > .github/last_run.txt
                    
                  # Commit and push the updated timestamp
                  git config --global user.name "niagarafinance-admin"
                  git config --global user.email "niagarafinance@proton.me"
                  git add .github/last_run.txt
                  git commit -m "Update last run timestamp"
                  git push

            - name: Skip message
              if: steps.last-run.outputs.should_run != 'true'
              run: |
                  echo "Skipping - less than 25 hours since last run"
